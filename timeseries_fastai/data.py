# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_data.ipynb (unless otherwise specified).

__all__ = ['TSBlock', 'TSDataLoaders', 'stack_train_valid']

# Cell
from .core import *
from fastai2.basics import *
from fastai2.torch_core import *
from fastai2.vision.data import get_grid

# Cell
def TSBlock(cls=TSeries): return TransformBlock(type_tfms=cls.create)

# Cell
class TSDataLoaders(DataLoaders):
    @classmethod
    @delegates(DataLoaders.from_dblock)
    def from_df(cls, df, path='.', valid_pct=0.2, seed=None, x_cols=None, label_col=None,
                y_block=None, valid_col=None, item_tfms=None, batch_tfms=None, **kwargs):
        y_block = ifnone(y_block, CategoryBlock)
        splitter = RandomSplitter(valid_pct, seed=seed) if valid_col is None else ColSplitter(valid_col)
        dblock = DataBlock(blocks=(TSBlock, y_block),
                           get_x=ColReader(x_cols),
                           get_y=ColReader(label_col),
                           splitter=splitter,
                           item_tfms=item_tfms,
                           batch_tfms=batch_tfms)
        return cls.from_dblock(dblock, df, path=path, **kwargs)

# Cell
def stack_train_valid(df_train, df_valid):
    return pd.concat([df_train.assign(valid_col=False), df_valid.assign(valid_col=True)]).reset_index(drop=True)